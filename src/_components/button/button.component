var r=`<label id="buttonLabel" for="button" hidden></label>
<button id="button" name="button" part="button" class="noselect">
  <slot></slot>
</button>
`;var s=`* {
	box-sizing: border-box;
	padding: 0px;
	margin: 0px;
} /* Fixing default html stuff */

.noselect {
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    outline: none;
}

button {
	width: 100%;
	height: 100%;
	display: flex;
	justify-content: center;
	align-items: center;
	font-family: system-ui;
	border: none;
	border-radius: var(--button-component-radius);
	cursor: pointer;
	background-color: var(--button-component-bg);
	color: var(--button-component-fg);
	transition: background-color 0.1s;
}

button:hover, button:focus {
	background-color: var(--button-component-bg-2);
}

button:active {
	background-color: var(--button-component-bg);
}
`;var l=class extends HTMLElement{static get observedAttributes(){return["title","placeholder"]}constructor(){super(),this.attachShadow({mode:"open"});let t=document.createElement("template");t.innerHTML=`<style>${s}</style>${r}`,this.shadowRoot.appendChild(t.content.cloneNode(!0)),this.elems={button:this.shadowRoot.getElementById("button"),buttonLabel:this.shadowRoot.getElementById("buttonLabel")},this.attribs={title:{value:null,usages:[{element:this.elems.button,attrib:null,disabled:!1,format:null,extra:null},{element:this.elems.buttonLabel,attrib:"innerHTML",disabled:!1,format:null,extra:null}]}},this.handlers={click:[{element:this.elems.button,handler:o=>{console.log("Login button clicked.")}}]}}connectedCallback(){Object.entries(this.handlers).forEach(([t,o])=>{o.forEach(e=>{e.element.addEventListener(t,e.handler)})})}attributeChangedCallback(t,o,e){this.attribs[t]!=null&&(this.attribs[t].value=e,this.attribs[t].usages.forEach(n=>{n.disabled||(n.element[n.attrib?n.attrib:t]=n.format?n.format(e):e),n.extra&&n.extra(t,e,this.attribs)}))}disconnectedCallback(){Object.entries(this.handlers).forEach(([t,o])=>{o.forEach(e=>{e.element.removeEventListener(t,e.handler)})})}};customElements.define("button-component",l);
